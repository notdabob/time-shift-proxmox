[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "time-shift-proxmox"
version = "0.2.0"
description = "A Debian-based VM template for Proxmox that can temporarily shift system time to access iDRAC interfaces with expired SSL certificates"
authors = ["Time-Shift Team <notdabob@users.noreply.github.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/notdabob/time-shift-proxmox"
repository = "https://github.com/notdabob/time-shift-proxmox"
documentation = "https://github.com/notdabob/time-shift-proxmox/blob/main/README.md"
keywords = ["proxmox", "ssl", "certificate", "time", "idrac", "virtualization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Networking",
]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.28.0"
urllib3 = "^1.26.0"
python-dotenv = "^1.0.0"
cryptography = "^41.0.0"
keyring = "^24.0.0"
click = "^8.1.0"
pydantic = "^2.0.0"
aiohttp = "^3.8.0"
structlog = "^23.0.0"
google-generativeai = {version = "^0.3.0", optional = true}
anthropic = {version = "^0.7.0", optional = true}
openai = {version = "^1.0.0", optional = true}
groq = {version = "^0.4.0", optional = true}
fastapi = {version = "^0.100.0", optional = true}
uvicorn = {version = "^0.23.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
isort = "^5.12.0"
pre-commit = "^3.4.0"
bandit = "^1.7.5"
safety = "^2.3.0"

[tool.poetry.extras]
ai = ["google-generativeai", "anthropic", "openai", "groq"]
web = ["fastapi", "uvicorn"]
all = ["google-generativeai", "anthropic", "openai", "groq", "fastapi", "uvicorn"]

[tool.poetry.scripts]
time-shift = "bin.time_shift_cli:main"
time-shift-config = "bin.vm_config_wizard:main"
time-shift-setup = "bin.setup_project_requirements:main"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["time_shift_proxmox"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "google.generativeai.*",
    "anthropic.*", 
    "openai.*",
    "groq.*",
    "keyring.*",
    "psutil.*",
    "structlog.*",
    "dotenv.*",
    "aiohttp.*",
    "asyncio.*",
    "cryptography.*",
    "fastapi.*",
    "uvicorn.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security-related",
]

[tool.coverage.run]
source = ["lib", "bin"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]  # Skip assert_used and shell injection warnings for specific cases

[tool.bandit.assert_used]
skips = ["**/test_*.py", "**/tests/*.py"]